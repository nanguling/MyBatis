<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mystudy.dao.TestDao">
    <!--
        select:表示查询操作。
        id：你要执行的sql语句的唯一标识，mybatis会使用这个id的值来找到要执行的sql语句
            可以自定义，但是要求使用接口中的方法名称
        resultType:表示结果的类型，是sql语句执行后得到的ResultSet，遍历这个ResultSet得到的java对象的类型
                    写的是类型的全限定名称
    -->
    <!--查询操作-->
    <select id="selectTest" resultType="com.mystudy.entity.Testr">
        select id,name,age from test order by id
    </select>
    <!--插入操作-->
    <insert id="insetTest">
        insert into test values (#{id},#{name},#{age})
    </insert>
</mapper>
<!--
    sql映射文件(sql mapper)：写sql语句的，mybatis会执行这些sql
    1.指定约束文件
        <!DOCTYPE mapper
            PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
            "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        mybatis-3-mapper.dtd：是约束文件的名称，扩展名是dtd
    2.约束文件的作用：限制和检查在当前文件中出现的标签，属性必须符合mybatis的要求
    3.mapper：是当前文件的根标签，必须的
      namespqce：命名空间，唯一值的，可以是自定义的字符串
                要求使用dao接口的全限定名称。
    4.在当前文件中，可以使用特定的标签，表示数据库的特定操作。
        <select>:表示执行查询
        <update>:表示更新数据库的操作，在这个标签中写的是update sql语句
        <insert>:表示插入语句
        <delete>:表示删除语句
-->