<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--指定peoperties文件的位置，从类路径的根开始找文件-->
    <properties resource="jdbc.properties"/>

    <!--settings:控制mybatis全局行为-->
    <settings>
        <!--设置mybatis输出日志-->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>

    <!--定义别名-->
    <typeAliases>
        <!--
            第一种方式：
            可以指定一个类型一个自定义的别名
            type:自定义类型的全限定名称
            alias：自定义别名
        -->
        <!--<typeAlias type="com.mystudy.entity.Student" alias="stu"></typeAlias>
        <typeAlias type="com.mystudy.vo.ViewStudent" alias="vstu"></typeAlias>-->
        
        <!--
            第二种方式：
            <package> name是包名，这个包中的所有类，类名就是别名(类名不区分大小写)
        -->
        <package name="com.mystudy.entity"/>
        <package name="com.mystudy.vo"/>
    </typeAliases>

    <!--配置插件-->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor"/>
    </plugins>

    <environments default="development">
        <environment id="development">
            <!--
                transactionManager:mybatis提交事务，回滚事务的方式
                type：事务处理的类型
                    1。JDBC 表示mybatis底层调用jdbc中Connnection对象的，commit，rollback
                    2.MANAGED：把mybatis的事务处理委托给其他容器(一个服务器软件，框架(spring))
            -->
            <transactionManager type="JDBC"/>
            <!--
                dataSource：表示数据源，java体系中，规定实现了javax.sql.DataSource接口的都是数据源
                            数据源表示Connection对象的。
                type：指定数据源的类型
                    1.POOLED：使用连接池，mybatis会创建PooledDataSource类
                    2.UPOOLED：不使用连接池，在每次执行sql语句的时候，先创建连接，执行sql，再关闭连接
                                mybatis会创建一个UnPooledDataSource类
                    3.JNDI：java命名和目录服务(Windows注册表)
            -->
            <dataSource type="POOLED">
                <!--数据库的驱动类名-->
                <property name="driver" value="${jdbc.driver}"/>
                <!--连接数据库的url字符串-->
                <property name="url"
                          value="${jdbc.url}"/>
                <!--访问数据库的用户名-->
                <property name="username" value="${jdbc.user}"/>
                <property name="password" value="${jdbc.passwd}"/>
            </dataSource>
        </environment>
    </environments>
    <!--sql mapper(sql映射文件的位置)-->
    <mappers>
        <!--第一种方式：指定多个mapper配置文件-->
        <!--<mapper resource="com/mystudy/dao/StudentDao.xml"/>-->
        <!--<mapper resource="mapper文件的全限定名称"/>-->

        <!--第二种方式：使用包名
            name：xml文件(mapper文件)所在的包名,这个包中的所有xml文件一次都能加载给mybatis
            使用package的要求：
                1。mapper文件名称需要和接口名称一样，区分大小写的一样
                2.mapper文件和dao接口在同一目录
        -->
        <package name="com.mystudy.dao"/>
        <!--<package name="其他包名"/>-->
    </mappers>
</configuration>